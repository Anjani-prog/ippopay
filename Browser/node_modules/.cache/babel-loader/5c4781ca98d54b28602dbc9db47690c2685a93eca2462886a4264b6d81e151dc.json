{"ast":null,"code":"var _jsxFileName = \"/Users/anjanitharayil/Documents/MachineTest/UI/src/page/Home/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Space, Spin, Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3500\";\nexport default function Home() {\n  _s();\n  const [password, setpassword] = useState(\"\");\n  const [resultPassword, setresultPassword] = useState(\"\");\n  const [ArrayInputs, setArrayInputs] = useState(\"\");\n  const [difference, setArrayDifference] = useState(\"\");\n  const [Loader, setLoader] = useState(false);\n  const Save = type => {\n    setLoader(true);\n    let output = 0;\n    let nums = ArrayInputs.split(\",\").map(Number);\n    if (type === \"Program1\") {\n      output = minimumStepsToMakePasswordStrong(password);\n      setresultPassword(output);\n    } else {\n      if (nums.length % 2 === 0) {\n        output = minimumDifference(nums);\n        setArrayDifference(output);\n      } else {\n        setArrayDifference(\"Input length is incorrect\");\n      }\n    }\n    const data = {\n      type: type,\n      input: type === \"Program1\" ? password : nums,\n      output: type === \"Program1\" ? JSON.stringify(resultPassword) : difference\n    };\n    SaveDB(data);\n  };\n  const SaveDB = async data => {\n    let headersList = {\n      Accept: \"*/*\",\n      \"Content-Type\": \"application/json\"\n    };\n    let bodyContent = JSON.stringify({\n      type: data.type,\n      input: data.input,\n      ouput: data.output\n    });\n    await fetch(`${BASE_URL}/saveResults`, {\n      method: \"POST\",\n      body: bodyContent,\n      headers: headersList\n    }).then(data => data.json()).then(res => console.log(res)).catch(error => console.log(error)).finally(() => setLoader(false));\n  };\n  function minimumDifference(nums) {\n    const n = nums.length / 2;\n    const totalSum = nums.reduce((sum, num) => sum + num, 0);\n    const targetSum = Math.floor(totalSum / 2);\n    const dp = [];\n    for (let i = 0; i <= n; i++) {\n      dp.push(new Array(targetSum + 1).fill(false));\n    }\n    dp[0][0] = true;\n    for (const num of nums) {\n      for (let i = n; i > 0; i--) {\n        for (let s = targetSum; s >= num; s--) {\n          dp[i][s] = dp[i][s] || dp[i - 1][s - num];\n        }\n      }\n    }\n    for (let s = targetSum; s >= 0; s--) {\n      if (dp[n][s]) {\n        return totalSum - 2 * s;\n      }\n    }\n  }\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n    let steps = 0;\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n    return steps;\n  }\n  function isPasswordStrong(password) {\n    return password.length >= 6 && password.length <= 20 && containsLowercaseLetter(password) && containsUppercaseLetter(password) && containsDigit(password) && !hasThreeRepeatingCharacters(password);\n  }\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [Loader && /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading...\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"Saving to DB\",\n          type: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #1 - Check Password Strength\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-description\",\n        children: [\"1. A password is considered strong if the below conditions are all met:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It has at least 6 characters and at most 20 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It does not contain three repeating characters in a row (i.e., \\\"Baaabb0\\\" is weak, but \\\"Baaba0\\\" is strong).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), \"Given a string password, return the minimum number of steps required to make the password strong. If the password is already strong, return 0.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setpassword(e.target.value),\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => Save(\"Program1\"),\n          type: \"primary\",\n          children: \"Check Strength\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: resultPassword === 0 ? \"Your Password is Strong\" : resultPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #2 - Array Partition\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-description\",\n        children: [\"2. You are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays. Return the minimum possible absolute difference.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Example:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Input: nums = [1,2,3,4]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Output: 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Explanation: One optimal partition is: [1,4] and [2,3]. The absolute difference between the sums of the arrays is abs((5) - (5)) = 0.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setArrayInputs(e.target.value),\n          placeholder: \"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => Save(\"Program2\"),\n          type: \"primary\",\n          children: [\"Provide Difference\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: difference\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"7CKH3+dQtj7Olf+LjxJORLuE9NU=\");\n_c = Home;\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Card","Button","Input","Space","Spin","Alert","jsxDEV","_jsxDEV","BASE_URL","Home","_s","password","setpassword","resultPassword","setresultPassword","ArrayInputs","setArrayInputs","difference","setArrayDifference","Loader","setLoader","Save","type","output","nums","split","map","Number","minimumStepsToMakePasswordStrong","length","minimumDifference","data","input","JSON","stringify","SaveDB","headersList","Accept","bodyContent","ouput","fetch","method","body","headers","then","json","res","console","log","catch","error","finally","n","totalSum","reduce","sum","num","targetSum","Math","floor","dp","i","push","Array","fill","s","isPasswordStrong","steps","containsLowercaseLetter","containsUppercaseLetter","containsDigit","hasThreeRepeatingCharacters","test","className","children","direction","style","width","tip","message","fileName","_jsxFileName","lineNumber","columnNumber","title","Compact","alignCenter","onChange","e","target","value","placeholder","onClick","_c","padding","$RefreshReg$"],"sources":["/Users/anjanitharayil/Documents/MachineTest/UI/src/page/Home/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Space, Spin, Alert } from \"antd\";\n\nconst BASE_URL = \"http://localhost:3500\";\n\nexport default function Home() {\n  const [password, setpassword] = useState(\"\");\n  const [resultPassword, setresultPassword] = useState(\"\");\n  const [ArrayInputs, setArrayInputs] = useState(\"\");\n  const [difference, setArrayDifference] = useState(\"\");\n  const [Loader, setLoader] = useState(false);\n\n  const Save = (type) => {\n    setLoader(true);\n\n    let output = 0;\n    let nums = ArrayInputs.split(\",\").map(Number);\n    if (type === \"Program1\") {\n      output = minimumStepsToMakePasswordStrong(password);\n      setresultPassword(output);\n    } else {\n      if (nums.length % 2 === 0) {\n        output = minimumDifference(nums);\n        setArrayDifference(output);\n      } else {\n        setArrayDifference(\"Input length is incorrect\");\n      }\n    }\n    const data = {\n      type: type,\n      input: type === \"Program1\" ? password : nums,\n      output: type === \"Program1\" ? JSON.stringify(resultPassword) : difference,\n    };\n    SaveDB(data);\n  };\n\n  const SaveDB = async (data) => {\n    let headersList = {\n      Accept: \"*/*\",\n      \"Content-Type\": \"application/json\",\n    };\n\n    let bodyContent = JSON.stringify({\n      type: data.type,\n      input: data.input,\n      ouput: data.output,\n    });\n    await fetch(`${BASE_URL}/saveResults`, {\n      method: \"POST\",\n      body: bodyContent,\n      headers: headersList,\n    })\n      .then((data) => data.json())\n      .then((res) => console.log(res))\n      .catch((error) => console.log(error))\n      .finally(() => setLoader(false));\n  };\n\n  function minimumDifference(nums) {\n    const n = nums.length / 2;\n    const totalSum = nums.reduce((sum, num) => sum + num, 0);\n    const targetSum = Math.floor(totalSum / 2);\n\n    const dp = [];\n    for (let i = 0; i <= n; i++) {\n      dp.push(new Array(targetSum + 1).fill(false));\n    }\n    dp[0][0] = true;\n\n    for (const num of nums) {\n      for (let i = n; i > 0; i--) {\n        for (let s = targetSum; s >= num; s--) {\n          dp[i][s] = dp[i][s] || dp[i - 1][s - num];\n        }\n      }\n    }\n\n    for (let s = targetSum; s >= 0; s--) {\n      if (dp[n][s]) {\n        return totalSum - 2 * s;\n      }\n    }\n  }\n\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n\n    let steps = 0;\n\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n    return steps;\n  }\n\n  function isPasswordStrong(password) {\n    return (\n      password.length >= 6 &&\n      password.length <= 20 &&\n      containsLowercaseLetter(password) &&\n      containsUppercaseLetter(password) &&\n      containsDigit(password) &&\n      !hasThreeRepeatingCharacters(password)\n    );\n  }\n\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"home\">\n      {Loader && (\n        <Space\n          direction=\"vertical\"\n          style={{\n            width: \"100%\",\n          }}\n        >\n          <Spin tip=\"Loading...\">\n            <Alert message=\"Saving to DB\" type=\"info\" />\n          </Spin>\n        </Space>\n      )}\n\n      <Card title=\"Problem #1 - Check Password Strength\" className=\"card\">\n        <div className=\"password-description\">\n          1. A password is considered strong if the below conditions are all\n          met:\n          <ul>\n            <li>It has at least 6 characters and at most 20 characters.</li>\n            <li>\n              It contains at least one lowercase letter, at least one uppercase\n              letter, and at least one digit.\n            </li>\n            <li>\n              It does not contain three repeating characters in a row (i.e.,\n              \"Baaabb0\" is weak, but \"Baaba0\" is strong).\n            </li>\n          </ul>\n          Given a string password, return the minimum number of steps required\n          to make the password strong. If the password is already strong, return\n          0.\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input\n            onChange={(e) => setpassword(e.target.value)}\n            placeholder=\"Enter Password\"\n          />\n          <Button onClick={() => Save(\"Program1\")} type=\"primary\">\n            Check Strength\n          </Button>\n        </Space.Compact>\n        <div className=\"steps-container\">\n          <span>Response:</span>\n          <span>\n            {resultPassword === 0 ? \"Your Password is Strong\" : resultPassword}\n          </span>\n        </div>\n      </Card>\n      <Card title=\"Problem #2 - Array Partition\" className=\"card\">\n        <div className=\"array-description\">\n          2. You are given an integer array nums of 2 * n integers. You need to\n          partition nums into two arrays of length n to minimize the absolute\n          difference of the sums of the arrays. To partition nums, put each\n          element of nums into one of the two arrays. Return the minimum\n          possible absolute difference.\n          <div>Example:</div>\n          <ul>\n            <li>Input: nums = [1,2,3,4]</li>\n            <li>Output: 0</li>\n            <li>\n              Explanation: One optimal partition is: [1,4] and [2,3]. The\n              absolute difference between the sums of the arrays is abs((5) -\n              (5)) = 0.\n            </li>\n          </ul>\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input\n            onChange={(e) => setArrayInputs(e.target.value)}\n            placeholder=\"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \"\n          />\n          <Button onClick={() => Save(\"Program2\")} type=\"primary\">\n            Provide Difference{\" \"}\n          </Button>\n        </Space.Compact>\n        <div className=\"steps-container\">\n          <span>Response:</span>\n          <span>{difference}</span>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}