{"ast":null,"code":"var _jsxFileName = \"/Users/anjanitharayil/Documents/problems/src/page/Home/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Select, Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [password, setpassword] = useState(\"\");\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n    let steps = 0;\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n    return steps;\n  }\n  function isPasswordStrong(password) {\n    return password.length >= 6 && password.length <= 20 && containsLowercaseLetter(password) && containsUppercaseLetter(password) && containsDigit(password) && !hasThreeRepeatingCharacters(password);\n  }\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //   console.log(minimumStepsToMakePasswordStrong(\"abc\")); // Output: 4\n  //   console.log(minimumStepsToMakePasswordStrong(\"abcde\")); // Output: 1\n  //   console.log(minimumStepsToMakePasswordStrong(\"abcdefghij\")); // Output: 0\n  //   console.log(minimumStepsToMakePasswordStrong(\"Baaba0\")); // Output: 0\n  //   console.log(minimumStepsToMakePasswordStrong(\"Baaabb0\")); // Output: 1\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #1 - Check Password Strength\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-description\",\n        children: [\"1. A password is considered strong if the below conditions are all met:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It has at least 6 characters and at most 20 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It does not contain three repeating characters in a row (i.e., \\\"Baaabb0\\\" is weak, but \\\"Baaba0\\\" is strong).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), \"Given a string password, return the minimum number of steps required to make the password strong. If the password is already strong, return 0.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setpassword(e.target.value),\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => minimumStepsToMakePasswordStrong(password),\n          type: \"primary\",\n          children: \"Check Strength\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #2 - Array Partition\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-description\",\n        children: \"You are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays. Return the minimum possible absolute difference.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          children: \"Provide Optimal Parition \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"KDEbR3NUOmG5CqcosFZZ+CTOfXI=\");\n_c = Home;\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Card","Button","Input","Select","Space","jsxDEV","_jsxDEV","Home","_s","password","setpassword","useState","minimumStepsToMakePasswordStrong","isPasswordStrong","steps","length","containsLowercaseLetter","containsUppercaseLetter","containsDigit","i","hasThreeRepeatingCharacters","test","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Compact","style","alignCenter","onChange","e","target","value","placeholder","onClick","type","_c","padding","width","$RefreshReg$"],"sources":["/Users/anjanitharayil/Documents/problems/src/page/Home/index.js"],"sourcesContent":["import React from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Select, Space } from \"antd\";\n\nexport default function Home() {\n  const [password, setpassword] = useState(\"\");\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n\n    let steps = 0;\n\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n\n    return steps;\n  }\n\n  function isPasswordStrong(password) {\n    return (\n      password.length >= 6 &&\n      password.length <= 20 &&\n      containsLowercaseLetter(password) &&\n      containsUppercaseLetter(password) &&\n      containsDigit(password) &&\n      !hasThreeRepeatingCharacters(password)\n    );\n  }\n\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //   console.log(minimumStepsToMakePasswordStrong(\"abc\")); // Output: 4\n  //   console.log(minimumStepsToMakePasswordStrong(\"abcde\")); // Output: 1\n  //   console.log(minimumStepsToMakePasswordStrong(\"abcdefghij\")); // Output: 0\n  //   console.log(minimumStepsToMakePasswordStrong(\"Baaba0\")); // Output: 0\n  //   console.log(minimumStepsToMakePasswordStrong(\"Baaabb0\")); // Output: 1\n\n  return (\n    <div className=\"home\">\n      <Card title=\"Problem #1 - Check Password Strength\" className=\"card\">\n        <div className=\"password-description\">\n          1. A password is considered strong if the below conditions are all\n          met:\n          <ul>\n            <li>It has at least 6 characters and at most 20 characters.</li>\n            <li>\n              It contains at least one lowercase letter, at least one uppercase\n              letter, and at least one digit.\n            </li>\n            <li>\n              It does not contain three repeating characters in a row (i.e.,\n              \"Baaabb0\" is weak, but \"Baaba0\" is strong).\n            </li>\n          </ul>\n          Given a string password, return the minimum number of steps required\n          to make the password strong. If the password is already strong, return\n          0.\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input\n            onChange={(e) => setpassword(e.target.value)}\n            placeholder=\"Enter Password\"\n          />\n          <Button\n            onClick={() => minimumStepsToMakePasswordStrong(password)}\n            type=\"primary\"\n          >\n            Check Strength\n          </Button>\n        </Space.Compact>\n      </Card>\n      <Card title=\"Problem #2 - Array Partition\" className=\"card\">\n        <div className=\"array-description\">\n          You are given an integer array nums of 2 * n integers. You need to\n          partition nums into two arrays of length n to minimize the absolute\n          difference of the sums of the arrays. To partition nums, put each\n          element of nums into one of the two arrays. Return the minimum\n          possible absolute difference.\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input placeholder=\"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \" />\n          <Button type=\"primary\">Provide Optimal Parition </Button>\n        </Space.Compact>\n      </Card>\n    </div>\n  );\n}\n\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}