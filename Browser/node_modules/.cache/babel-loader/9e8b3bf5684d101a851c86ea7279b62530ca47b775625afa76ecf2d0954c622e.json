{"ast":null,"code":"var _jsxFileName = \"/Users/anjanitharayil/Documents/problems/src/page/Home/index.js\";\nimport React from \"react\";\nimport { Card } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problme #1\",\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"1. A password is considered strong if the below conditions are all met: \\u25CF It has at least 6 characters and at most 20 characters. \\u25CF It contains at least one lowercase letter, at least one uppercase letter, and at least one digit. \\u25CF It does not contain three repeating characters in a row (i.e., \\\"Baaabb0\\\" is weak, but \\\"Baaba0\\\" is strong). Given a string password, return the minimum number of steps required to make password strong. if password is already strong, return 0.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problme #1\",\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"dib\", {\n        children: \"You are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays. Return the minimum possible absolute difference.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","Home","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anjanitharayil/Documents/problems/src/page/Home/index.js"],"sourcesContent":["import React from \"react\";\nimport { Card } from \"antd\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <Card title=\"Problme #1\" className=\"card\">\n        <div>\n          1. A password is considered strong if the below conditions are all\n          met: ● It has at least 6 characters and at most 20 characters. ● It\n          contains at least one lowercase letter, at least one uppercase letter,\n          and at least one digit. ● It does not contain three repeating\n          characters in a row (i.e., &quot;Baaabb0&quot; is weak, but\n          &quot;Baaba0&quot; is strong). Given a string password, return the\n          minimum number of steps required to make password strong. if password\n          is already strong, return 0.\n        </div>\n      </Card>\n      <Card title=\"Problme #1\" className=\"card\">\n        <dib>\n          You are given an integer array nums of 2 * n integers. You need to\n          partition nums into two arrays of length n to minimize the absolute\n          difference of the sums of the arrays. To partition nums, put each\n          element of nums into one of the two arrays. Return the minimum\n          possible absolute difference.\n        </dib>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,oBACED,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBH,OAAA,CAACF,IAAI;MAACM,KAAK,EAAC,YAAY;MAACF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACvCH,OAAA;QAAAG,QAAA,EAAK;MASL;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACPR,OAAA,CAACF,IAAI;MAACM,KAAK,EAAC,YAAY;MAACF,SAAS,EAAC,MAAM;MAAAC,QAAA,eACvCH,OAAA;QAAAG,QAAA,EAAK;MAML;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACC,EAAA,GA1BuBR,IAAI;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}