{"ast":null,"code":"var _jsxFileName = \"/Users/anjanitharayil/Documents/problems/src/page/Home/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Select, Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [password, setpassword] = useState(\"\");\n  const [resultPassword, setresultPassword] = useState(\"\");\n  const [ArrayInputs, setArrayInputs] = useState(\"\");\n  const [difference, setArrayDifference] = useState(0);\n  function minimumDifference(nums) {\n    const n = nums.length / 2;\n\n    // Calculate the total sum of all elements in nums\n    let totalSum = 0;\n    for (const num of nums) {\n      totalSum += num;\n    }\n\n    // Initialize a 2D array to store the possible sums\n    const dp = [];\n    for (let i = 0; i <= n; i++) {\n      dp.push(new Array(totalSum + 1).fill(false));\n    }\n\n    // Base case: sum 0 can be achieved with an empty subset\n    dp[0][0] = true;\n\n    // Dynamic programming approach to find all possible sums\n    for (let i = 1; i <= 2 * n; i++) {\n      for (let j = n; j >= 1; j--) {\n        for (let k = 0; k <= totalSum; k++) {\n          if (k >= nums[i - 1]) {\n            dp[j][k] = dp[j][k] || dp[j - 1][k - nums[i - 1]];\n          }\n        }\n      }\n    }\n\n    // Find the minimum absolute difference between the sums\n    let minDifference = Infinity;\n    for (let k = totalSum / 2; k >= 0; k--) {\n      if (dp[n][k]) {\n        minDifference = totalSum - 2 * k;\n        break;\n      }\n    }\n    return minDifference;\n  }\n\n  // Test the function\n  const nums = [-36, 36];\n  const result = minimumDifference(nums);\n  console.log(result); // Output: 72\n\n  const calculate = () => {\n    const nums = ArrayInputs.split(\",\");\n    if (nums.length % 2 === 0) {\n      console.log(nums);\n      const min = minimumDifference(nums);\n      console.log(min);\n      setArrayDifference(min);\n    } else {}\n  };\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n    let steps = 0;\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n    return steps;\n  }\n  function isPasswordStrong(password) {\n    return password.length >= 6 && password.length <= 20 && containsLowercaseLetter(password) && containsUppercaseLetter(password) && containsDigit(password) && !hasThreeRepeatingCharacters(password);\n  }\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #1 - Check Password Strength\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-description\",\n        children: [\"1. A password is considered strong if the below conditions are all met:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It has at least 6 characters and at most 20 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"It does not contain three repeating characters in a row (i.e., \\\"Baaabb0\\\" is weak, but \\\"Baaba0\\\" is strong).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \"Given a string password, return the minimum number of steps required to make the password strong. If the password is already strong, return 0.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setpassword(e.target.value),\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setresultPassword(minimumStepsToMakePasswordStrong(password)),\n          type: \"primary\",\n          children: \"Check Strength\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: !resultPassword ? \"Your Password is Strong\" : resultPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Problem #2 - Array Partition\",\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-description\",\n        children: \"You are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays. Return the minimum possible absolute difference.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space.Compact, {\n        style: style.alignCenter,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setArrayInputs(e.target.value),\n          placeholder: \"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => calculate(),\n          type: \"primary\",\n          children: [\"Provide Optimal Parition\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Difference:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: difference\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"CWdMErLToGJRCfBeC8mer3GNIHY=\");\n_c = Home;\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Card","Button","Input","Select","Space","jsxDEV","_jsxDEV","Home","_s","password","setpassword","resultPassword","setresultPassword","ArrayInputs","setArrayInputs","difference","setArrayDifference","minimumDifference","nums","n","length","totalSum","num","dp","i","push","Array","fill","j","k","minDifference","Infinity","result","console","log","calculate","split","min","minimumStepsToMakePasswordStrong","isPasswordStrong","steps","containsLowercaseLetter","containsUppercaseLetter","containsDigit","hasThreeRepeatingCharacters","test","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Compact","style","alignCenter","onChange","e","target","value","placeholder","onClick","type","_c","padding","width","$RefreshReg$"],"sources":["/Users/anjanitharayil/Documents/problems/src/page/Home/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from \"antd\";\nimport { Button, Input, Select, Space } from \"antd\";\n\nexport default function Home() {\n  const [password, setpassword] = useState(\"\");\n  const [resultPassword, setresultPassword] = useState(\"\");\n  const [ArrayInputs, setArrayInputs] = useState(\"\");\n  const [difference, setArrayDifference] = useState(0);\n\n  function minimumDifference(nums) {\n    const n = nums.length / 2;\n\n    // Calculate the total sum of all elements in nums\n    let totalSum = 0;\n    for (const num of nums) {\n      totalSum += num;\n    }\n\n    // Initialize a 2D array to store the possible sums\n    const dp = [];\n    for (let i = 0; i <= n; i++) {\n      dp.push(new Array(totalSum + 1).fill(false));\n    }\n\n    // Base case: sum 0 can be achieved with an empty subset\n    dp[0][0] = true;\n\n    // Dynamic programming approach to find all possible sums\n    for (let i = 1; i <= 2 * n; i++) {\n      for (let j = n; j >= 1; j--) {\n        for (let k = 0; k <= totalSum; k++) {\n          if (k >= nums[i - 1]) {\n            dp[j][k] = dp[j][k] || dp[j - 1][k - nums[i - 1]];\n          }\n        }\n      }\n    }\n\n    // Find the minimum absolute difference between the sums\n    let minDifference = Infinity;\n    for (let k = totalSum / 2; k >= 0; k--) {\n      if (dp[n][k]) {\n        minDifference = totalSum - 2 * k;\n        break;\n      }\n    }\n\n    return minDifference;\n  }\n\n  // Test the function\n  const nums = [-36, 36];\n  const result = minimumDifference(nums);\n  console.log(result); // Output: 72\n\n  const calculate = () => {\n    const nums = ArrayInputs.split(\",\");\n    if (nums.length % 2 === 0) {\n      console.log(nums);\n      const min = minimumDifference(nums);\n      console.log(min);\n      setArrayDifference(min);\n    } else {\n    }\n  };\n\n  function minimumStepsToMakePasswordStrong(password) {\n    if (isPasswordStrong(password)) {\n      return 0;\n    }\n\n    let steps = 0;\n\n    if (password.length < 6) {\n      steps += 6 - password.length;\n    } else if (password.length > 20) {\n      steps += password.length - 20;\n    }\n\n    if (!containsLowercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsUppercaseLetter(password)) {\n      steps++;\n    }\n    if (!containsDigit(password)) {\n      steps++;\n    }\n\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        steps++;\n        break;\n      }\n    }\n    return steps;\n  }\n\n  function isPasswordStrong(password) {\n    return (\n      password.length >= 6 &&\n      password.length <= 20 &&\n      containsLowercaseLetter(password) &&\n      containsUppercaseLetter(password) &&\n      containsDigit(password) &&\n      !hasThreeRepeatingCharacters(password)\n    );\n  }\n\n  function containsLowercaseLetter(password) {\n    return /[a-z]/.test(password);\n  }\n\n  function containsUppercaseLetter(password) {\n    return /[A-Z]/.test(password);\n  }\n\n  function containsDigit(password) {\n    return /[0-9]/.test(password);\n  }\n\n  function hasThreeRepeatingCharacters(password) {\n    for (let i = 0; i < password.length - 2; i++) {\n      if (password[i] === password[i + 1] && password[i] === password[i + 2]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"home\">\n      <Card title=\"Problem #1 - Check Password Strength\" className=\"card\">\n        <div className=\"password-description\">\n          1. A password is considered strong if the below conditions are all\n          met:\n          <ul>\n            <li>It has at least 6 characters and at most 20 characters.</li>\n            <li>\n              It contains at least one lowercase letter, at least one uppercase\n              letter, and at least one digit.\n            </li>\n            <li>\n              It does not contain three repeating characters in a row (i.e.,\n              \"Baaabb0\" is weak, but \"Baaba0\" is strong).\n            </li>\n          </ul>\n          Given a string password, return the minimum number of steps required\n          to make the password strong. If the password is already strong, return\n          0.\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input\n            onChange={(e) => setpassword(e.target.value)}\n            placeholder=\"Enter Password\"\n          />\n          <Button\n            onClick={() =>\n              setresultPassword(minimumStepsToMakePasswordStrong(password))\n            }\n            type=\"primary\"\n          >\n            Check Strength\n          </Button>\n        </Space.Compact>\n        <div className=\"steps-container\">\n          <span>Steps:</span>\n          <span>\n            {!resultPassword ? \"Your Password is Strong\" : resultPassword}\n          </span>\n        </div>\n      </Card>\n      <Card title=\"Problem #2 - Array Partition\" className=\"card\">\n        <div className=\"array-description\">\n          You are given an integer array nums of 2 * n integers. You need to\n          partition nums into two arrays of length n to minimize the absolute\n          difference of the sums of the arrays. To partition nums, put each\n          element of nums into one of the two arrays. Return the minimum\n          possible absolute difference.\n        </div>\n        <Space.Compact style={style.alignCenter}>\n          <Input\n            onChange={(e) => setArrayInputs(e.target.value)}\n            placeholder=\"Enter Elements for the Array Eg:1,2,3,4,5,6,7 \"\n          />\n          <Button onClick={() => calculate()} type=\"primary\">\n            Provide Optimal Parition{\" \"}\n          </Button>\n        </Space.Compact>\n        <div className=\"steps-container\">\n          <span>Difference:</span>\n          <span>{difference}</span>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nconst style = {\n  alignCenter: {\n    padding: \"10px\",\n    width: \"100%\",\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}